○ Compiling /api/education/verification ...
 ⨯ ./lib/services/auth-cache-service.ts
Error:   × Server Actions must be async functions.
  │ 
    ╭─[/home/runner/workspace/lib/services/auth-cache-service.ts:73:1]
 70 │     }
 71 │     
 72 │     // Clear cache for specific token (useful for logout)
 73 │ ╭─▶ export function clearAuthCache(accessToken: string) {
 74 │ │     authCache.delete(accessToken)
 75 │ ╰─▶ }
 76 │     
 77 │     // Clear all expired entries (cleanup function)
 78 │     export function cleanupAuthCache() {
    ╰────
  × Server Actions must be async functions.
  │ 
    ╭─[/home/runner/workspace/lib/services/auth-cache-service.ts:78:1]
 75 │     }
 76 │     
 77 │     // Clear all expired entries (cleanup function)
 78 │ ╭─▶ export function cleanupAuthCache() {
 79 │ │     const now = Date.now()
 80 │ │     for (const [token, cached] of authCache.entries()) {
 81 │ │       if (now - cached.timestamp > CACHE_TTL) {
 82 │ │         authCache.delete(token)
 83 │ │       }
 84 │ │     }
 85 │ ╰─▶ }
    ╰────

Import trace for requested module:
./lib/services/auth-cache-service.ts
./app/api/connections/requests/route.ts
 ⨯ ./lib/services/auth-cache-service.ts
Error:   × Server Actions must be async functions.
  │ 
    ╭─[/home/runner/workspace/lib/services/auth-cache-service.ts:73:1]
 70 │     }
 71 │     
 72 │     // Clear cache for specific token (useful for logout)
 73 │ ╭─▶ export function clearAuthCache(accessToken: string) {
 74 │ │     authCache.delete(accessToken)
 75 │ ╰─▶ }
 76 │     
 77 │     // Clear all expired entries (cleanup function)
 78 │     export function cleanupAuthCache() {
    ╰────
  × Server Actions must be async functions.
  │ 
    ╭─[/home/runner/workspace/lib/services/auth-cache-service.ts:78:1]
 75 │     }
 76 │     
 77 │     // Clear all expired entries (cleanup function)
 78 │ ╭─▶ export function cleanupAuthCache() {
 79 │ │     const now = Date.now()
 80 │ │     for (const [token, cached] of authCache.entries()) {
 81 │ │       if (now - cached.timestamp > CACHE_TTL) {
 82 │ │         authCache.delete(token)
 83 │ │       }
 84 │ │     }
 85 │ ╰─▶ }
    ╰────

Import trace for requested module:
./lib/services/auth-cache-service.ts
./app/api/connections/requests/route.ts
