
Argument `isDisabledMember` is missing.
file:///home/runner/workspace/node_modules/.pnpm/@prisma+client@6.8.2_prisma@6.8.2_typescript@5.0.2__typescript@5.0.2/node_modules/@prisma/client/runtime/library.js: Invalid source map. Only conformant source maps can be used to find the original code. Cause: TypeError [ERR_INVALID_ARG_TYPE]: The "payload" argument must be of type object. Received null
file:///home/runner/workspace/node_modules/.pnpm/@prisma+client@6.8.2_prisma@6.8.2_typescript@5.0.2__typescript@5.0.2/node_modules/@prisma/client/runtime/library.js: Invalid source map. Only conformant source maps can be used to find the original code. Cause: TypeError [ERR_INVALID_ARG_TYPE]: The "payload" argument must be of type object. Received null
file:///home/runner/workspace/node_modules/.pnpm/@prisma+client@6.8.2_prisma@6.8.2_typescript@5.0.2__typescript@5.0.2/node_modules/@prisma/client/runtime/library.js: Invalid source map. Only conformant source maps can be used to find the original code. Cause: TypeError [ERR_INVALID_ARG_TYPE]: The "payload" argument must be of type object. Received null
file:///home/runner/workspace/node_modules/.pnpm/@prisma+client@6.8.2_prisma@6.8.2_typescript@5.0.2__typescript@5.0.2/node_modules/@prisma/client/runtime/library.js: Invalid source map. Only conformant source maps can be used to find the original code. Cause: TypeError [ERR_INVALID_ARG_TYPE]: The "payload" argument must be of type object. Received null
file:///home/runner/workspace/node_modules/.pnpm/@prisma+client@6.8.2_prisma@6.8.2_typescript@5.0.2__typescript@5.0.2/node_modules/@prisma/client/runtime/library.js: Invalid source map. Only conformant source maps can be used to find the original code. Cause: TypeError [ERR_INVALID_ARG_TYPE]: The "payload" argument must be of type object. Received null
Error fetching circle members: Error [PrismaClientValidationError]: 
Invalid `prisma.circleBadge.findUnique()` invocation:

{
  where: {
    id: "e58d25bb-b64e-4094-8b74-7532fce035e2"
  },
  include: {
    creator: {
      select: {
        id: true,
        firstName: true,
        lastName: true,
        profileImageUrl: true,
        bio: true,
        role: true
      }
    },
    memberships: {
      where: {
        status: "active",
        OR: [
          {
            isDisabledMember: false
          },
          {
            isDisabledMember: null
          }
        ]
      },
      include: {
        user: {
          select: {
            id: true,
            firstName: true,
            lastName: true,
            profileImageUrl: true,
            bio: true,
            role: true
          }
        }
      }
    }
  }
}

Argument `isDisabledMember` is missing.
    at async GET (app/api/circles/[id]/members/route.ts:129:30)
  127 |
  128 |     // If all checks pass, fetch and return members
> 129 |     const circleWithMembers = await prisma.circleBadge.findUnique({
      |                              ^
  130 |       where: { id: circleId },
  131 |       include: {
  132 |         creator: { {
  clientVersion: '6.8.2'
}
 GET /api/circles/e58d25